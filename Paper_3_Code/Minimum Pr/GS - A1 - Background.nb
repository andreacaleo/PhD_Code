(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    212220,       4381]
NotebookOptionsPosition[    210407,       4329]
NotebookOutlinePosition[    210856,       4346]
CellTagsIndexPosition[    210813,       4343]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mP", "=", 
    RowBox[{"1.67", "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "24"}], ")"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", "g", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kB", "=", 
    RowBox[{"1.38", "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "16"}], ")"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"in", " ", "cgs"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "=", 
    RowBox[{"6.67", "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "8"}], ")"}]}]}]}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{"in", " ", "cgs"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "=", 
    RowBox[{"6.63", "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "27"}], ")"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"in", " ", "cgs"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Msun", "=", 
   RowBox[{"1.989", "*", 
    RowBox[{"10", "^", "33"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rsun", "=", 
   RowBox[{"6.9598", "*", 
    RowBox[{"10", "^", "10"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lsun", "=", 
   RowBox[{"3.8418", "*", 
    RowBox[{"10", "^", "33"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "=", 
    RowBox[{"3", "*", 
     RowBox[{"10", "^", "10"}]}]}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{"cm", "/", "s"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigmaSB", "=", 
    RowBox[{"5.67", "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "5"}], ")"}]}]}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", 
    RowBox[{"4", "*", 
     RowBox[{"sigmaSB", "/", "c"}]}]}], ";"}], "   "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"5", "/", "3"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", "0.62"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6110599243215156`*^9, 3.6110599245165267`*^9}, {
  3.626184898695669*^9, 3.626184907634445*^9}, {3.628590180813876*^9, 
  3.6285901941140194`*^9}, {3.633260825664111*^9, 3.6332608336659794`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Polinomi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"q", "^", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.611061148552538*^9, {3.6117537127853036`*^9, 3.6117537141003056`*^9}, {
   3.611754580985201*^9, 3.611754582405203*^9}, {3.623664360187606*^9, 
   3.6236644487025824`*^9}, {3.6261849583761215`*^9, 3.626184958751127*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SolarModel0", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Pigkappa\\\\Dropbox\\\\fisica\\\\PhD\\\\\
SolarRotation\\\\BalbusEquation\\\\SolarModelBS2005-AGS,OP\>\"", ",", 
      "\"\<Table\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SolarModel", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"SolarModel0", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SolarModel", "=", 
    RowBox[{"Drop", "[", 
     RowBox[{"SolarModel", ",", 
      RowBox[{"-", "3"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RadiusMass", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"Rsun", "*", 
        RowBox[{
         RowBox[{"SolarModel", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"Msun", "*", 
        RowBox[{
         RowBox[{"SolarModel", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "SolarModel", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RadiusTemp", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rsun", "*", 
        RowBox[{
         RowBox[{"SolarModel", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"SolarModel", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "SolarModel", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RadiusDens", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rsun", "*", 
        RowBox[{
         RowBox[{"SolarModel", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"SolarModel", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "4"}], "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "SolarModel", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RadiusPress", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rsun", "*", 
        RowBox[{
         RowBox[{"SolarModel", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"SolarModel", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "5"}], "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "SolarModel", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RadiusLumin", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rsun", "*", 
        RowBox[{
         RowBox[{"SolarModel", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"Lsun", "*", 
        RowBox[{
         RowBox[{"SolarModel", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "6"}], "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "SolarModel", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RadiusFlux", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rsun", "*", 
        RowBox[{
         RowBox[{"SolarModel", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"Lsun", "*", 
        RowBox[{
         RowBox[{
          RowBox[{"SolarModel", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "6"}], "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", "*", "Pi", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"RadiusTemp", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}], "^", "2"}]}], 
          ")"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "SolarModel", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RadiusGrav", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"RadiusMass", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"G", "*", 
        RowBox[{
         RowBox[{
          RowBox[{"RadiusMass", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"RadiusMass", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ")"}], "^", "2"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "RadiusMass", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.611059904942407*^9, 3.6110599383283167`*^9}, {
   3.611059973072304*^9, 3.611059973289316*^9}, 3.611306906027444*^9, 
   3.6113244613228703`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RhoN", "=", 
   RowBox[{"Interpolation", "[", "RadiusDens", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PN", "=", 
   RowBox[{"Interpolation", "[", "RadiusPress", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TN", "=", 
   RowBox[{"Interpolation", "[", "RadiusTemp", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Grav", "=", 
    RowBox[{"Interpolation", "[", "RadiusGrav", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RDown", "=", 
   RowBox[{"Rsun", "*", "0.1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RUp", "=", 
   RowBox[{"Rsun", "*", "0.9"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6110599524621253`*^9, 3.6110599692180834`*^9}, {
  3.6110606291688304`*^9, 3.6110606435436525`*^9}, {3.6113116007184563`*^9, 
  3.611311618301585*^9}, {3.64536412474829*^9, 3.645364145311028*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RadiusGravReduced", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"RadiusGrav", ",", 
     RowBox[{
      RowBox[{"RDown", "<", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "<", "RUp"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RadiusTempReduced", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"RadiusTemp", ",", 
     RowBox[{
      RowBox[{"RDown", "<", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "<", "RUp"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RadiusPressReduced", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"RadiusPress", ",", 
     RowBox[{
      RowBox[{"RDown", "<", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "<", "RUp"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RadiusDensReduced", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"RadiusDens", ",", 
     RowBox[{
      RowBox[{"RDown", "<", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "<", "RUp"}], "&"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.6110599806117353`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RhoFit0", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"RadiusDensReduced", ",", "Polinomi", ",", "q"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RhoFit", "[", "x_", "]"}], "=", 
   RowBox[{"RhoFit0", "/.", 
    RowBox[{"{", 
     RowBox[{"q", "\[Rule]", "x"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"RhoN", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "RDown", ",", "RUp"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "RadiusDensReduced", "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"RhoFit", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "RDown", ",", "RUp"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<r (cm)\>\"", ",", "\"\<rho (g/cm^3)\>\"", ",", "\"\<Density\>\""}],
       "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "16"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", 
    RowBox[{"R_", ",", "z_"}], "]"}], "=", 
   RowBox[{"RhoFit", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"R", "^", "2"}], "+", 
       RowBox[{"z", "^", "2"}]}], ")"}], "^", "0.5"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6110599963656363`*^9, 3.6110600032480297`*^9}, {
   3.6113116107007637`*^9, 3.6113116272569942`*^9}, {3.623673949114626*^9, 
   3.623673969843706*^9}, 3.624109961080493*^9, {3.62859021633897*^9, 
   3.628590218652046*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TempFit0", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"RadiusTempReduced", ",", "Polinomi", ",", "q"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TempFit", "[", "x_", "]"}], "=", 
   RowBox[{"TempFit0", "/.", 
    RowBox[{"{", 
     RowBox[{"q", "\[Rule]", "x"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"TN", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "RDown", ",", "RUp"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "RadiusTempReduced", "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"TempFit", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "RDown", ",", "RUp"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<r (cm)\>\"", ",", "\"\<T (K)\>\"", ",", "\"\<Temperature\>\""}], 
      "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "16"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T", "[", 
    RowBox[{"R_", ",", "z_"}], "]"}], "=", 
   RowBox[{"TempFit", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"R", "^", "2"}], "+", 
       RowBox[{"z", "^", "2"}]}], ")"}], "^", "0.5"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6110600128895817`*^9, 3.6110600135166173`*^9}, {
   3.611311632024815*^9, 3.6113116351848803`*^9}, 3.6285902133847966`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PressFit0", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"RadiusPressReduced", ",", "Polinomi", ",", "q"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PressFit", "[", "x_", "]"}], "=", 
   RowBox[{"PressFit0", "/.", 
    RowBox[{"{", 
     RowBox[{"q", "\[Rule]", "x"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"PN", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "RDown", ",", "RUp"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "RadiusPressReduced", "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"PressFit", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "RDown", ",", "RUp"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<r (cm)\>\"", ",", "\"\<P (g/(cm*s^2))\>\"", ",", 
       "\"\<Pressure\>\""}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "16"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", 
    RowBox[{"R_", ",", "z_"}], "]"}], "=", 
   RowBox[{"PressFit", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"R", "^", "2"}], "+", 
       RowBox[{"z", "^", "2"}]}], ")"}], "^", "0.5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PdR", "[", 
    RowBox[{"R_", ",", "z_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"R", ",", "z"}], "]"}], ",", "R"}], "]"}]}], ";", "   ", 
  RowBox[{
   RowBox[{"Pdz", "[", 
    RowBox[{"R_", ",", "z_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"R", ",", "z"}], "]"}], ",", "z"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dLogPdLogr", "[", 
    RowBox[{"R_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"P", "[", 
        RowBox[{"R", ",", "z"}], "]"}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["R", "2"], "+", 
         SuperscriptBox["z", "2"]}]]], ")"}], 
     RowBox[{"-", "1"}]], "*", 
    RowBox[{
     RowBox[{"PressFit", "'"}], "[", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["R", "2"], "+", 
       SuperscriptBox["z", "2"]}]], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6110600197029715`*^9, 3.6110600247242584`*^9}, {
  3.6110608144924307`*^9, 3.6110608205067744`*^9}, {3.611311637249436*^9, 
  3.6113116409998283`*^9}, {3.628590202897955*^9, 3.628590203601119*^9}, {
  3.645363748117815*^9, 3.645363843181696*^9}, {3.6453639128389564`*^9, 
  3.645363976386756*^9}, {3.6453641606394053`*^9, 3.6453641608738127`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Om0SqList", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Pigkappa\\\\Dropbox\\\\fisica\\\\PhD\\\\\
AngularMomentumTransfer\\\\Minimum Pr\\\\Omega0SqGONG.dat\>\"", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Om0SqFit0", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"Om0SqList", ",", "Polinomi", ",", "q"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Om0SqFit", "[", "x_", "]"}], "=", 
   RowBox[{"Om0SqFit0", "/.", 
    RowBox[{"{", 
     RowBox[{"q", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"x", "/", "Rsun"}], ")"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Om0SqFit", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        RowBox[{"0.5", "Rsun"}], ",", 
        RowBox[{"0.72", "Rsun"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"Om0SqList", ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<r (cm)\>\"", ",", "\"\<Omega0Sq (rad/s^2)\>\""}], "}"}]}], 
    ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "16"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Om2SqList", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Pigkappa\\\\Dropbox\\\\fisica\\\\PhD\\\\\
AngularMomentumTransfer\\\\Minimum Pr\\\\Omega2SqGONG.dat\>\"", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Om2SqFit0", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"Om2SqList", ",", "Polinomi", ",", "q"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Om2SqFit", "[", "x_", "]"}], "=", 
   RowBox[{"Om2SqFit0", "/.", 
    RowBox[{"{", 
     RowBox[{"q", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"x", "/", "Rsun"}], ")"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Om2SqFit", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        RowBox[{"0.5", "Rsun"}], ",", 
        RowBox[{"0.72", "Rsun"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"Om2SqList", ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<r (cm)\>\"", ",", "\"\<Omega2Sq (rad/s^2)\>\""}], "}"}]}], 
    ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "16"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6224621126013355`*^9, 3.6224621141795425`*^9}, {
   3.6224622104007883`*^9, 3.6224622134477067`*^9}, {3.6285330348151703`*^9, 
   3.6285331069001727`*^9}, {3.628533243769582*^9, 3.6285333021028347`*^9}, {
   3.62853384125322*^9, 3.628533846793141*^9}, {3.628534155874875*^9, 
   3.6285341682536354`*^9}, 3.6285342081588783`*^9, 3.628534954949374*^9, 
   3.6285363531674275`*^9, {3.6285363996423197`*^9, 3.6285364061389303`*^9}, {
   3.628590139787699*^9, 3.6285901492433367`*^9}, {3.6394188943209715`*^9, 
   3.6394189116987667`*^9}, 3.6394189436416135`*^9, {3.645425617578943*^9, 
   3.6454257062015057`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"OmegaFit", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   SqrtBox[
    RowBox[{
     RowBox[{"Om0SqFit", "[", "r", "]"}], "+", 
     RowBox[{
      RowBox[{"Om2SqFit", "[", "r", "]"}], "*", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]Sqdr", "[", 
   RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Om0SqFit", "[", 
      RowBox[{"r", "+", 
       RowBox[{"5", "*", 
        SuperscriptBox["10", "5"]}]}], "]"}], "-", 
     RowBox[{"Om0SqFit", "[", 
      RowBox[{"r", "-", 
       RowBox[{"5", "*", 
        SuperscriptBox["10", "5"]}]}], "]"}]}], 
    RowBox[{"10", "*", 
     SuperscriptBox["10", "5"]}]], "+", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"Om2SqFit", "[", 
       RowBox[{"(", 
        RowBox[{"r", "+", 
         RowBox[{"5", "*", 
          SuperscriptBox["10", "5"]}]}], ")"}], "]"}], "-", 
      RowBox[{"Om2SqFit", "[", 
       RowBox[{"r", "-", 
        RowBox[{"5", "*", 
         SuperscriptBox["10", "5"]}]}], "]"}]}], 
     RowBox[{"10", "*", 
      SuperscriptBox["10", "5"]}]], "*", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]Sqd\[Theta]", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "2"}], "*", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", 
    RowBox[{"Om2SqFit", "[", "r", "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]", "[", 
    RowBox[{"R_", ",", "z_"}], "]"}], ":=", 
   RowBox[{"OmegaFit", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R", "^", "2"}], "+", 
         RowBox[{"z", "^", "2"}]}], ")"}], "^", "0.5"}], ")"}], ",", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"R", "/", "z"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]dR", "[", 
   RowBox[{"R_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", 
     RowBox[{"\[CapitalOmega]", "[", 
      RowBox[{"R", ",", "z"}], "]"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["R", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["R", "2"], "+", 
         SuperscriptBox["z", "2"]}]]], 
      RowBox[{"\[CapitalOmega]Sqdr", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["R", "2"], "+", 
          SuperscriptBox["z", "2"]}]], ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"R", "/", "z"}], "]"}]}], "]"}]}], "+", 
     RowBox[{
      FractionBox["z", 
       RowBox[{
        SuperscriptBox["R", "2"], "+", 
        SuperscriptBox["z", "2"]}]], "*", 
      RowBox[{"\[CapitalOmega]Sqd\[Theta]", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["R", "2"], "+", 
          SuperscriptBox["z", "2"]}]], ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"R", "/", "z"}], "]"}]}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]dz", "[", 
   RowBox[{"R_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", 
     RowBox[{"\[CapitalOmega]", "[", 
      RowBox[{"R", ",", "z"}], "]"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["z", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["R", "2"], "+", 
         SuperscriptBox["z", "2"]}]]], 
      RowBox[{"\[CapitalOmega]Sqdr", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["R", "2"], "+", 
          SuperscriptBox["z", "2"]}]], ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"R", "/", "z"}], "]"}]}], "]"}]}], "-", 
     RowBox[{
      FractionBox["R", 
       RowBox[{
        SuperscriptBox["R", "2"], "+", 
        SuperscriptBox["z", "2"]}]], "*", 
      RowBox[{"\[CapitalOmega]Sqd\[Theta]", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["R", "2"], "+", 
          SuperscriptBox["z", "2"]}]], ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"R", "/", "z"}], "]"}]}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]RdR", "[", 
   RowBox[{"R_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]dR", "[", 
     RowBox[{"R", ",", "z"}], "]"}], "*", "R"}], "+", 
   RowBox[{"\[CapitalOmega]", "[", 
    RowBox[{"R", ",", "z"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]Rdz", "[", 
   RowBox[{"R_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[CapitalOmega]dz", "[", 
    RowBox[{"R", ",", "z"}], "]"}], "*", "R"}]}]}], "Input",
 CellChangeTimes->{{3.6224621126013355`*^9, 3.6224621141795425`*^9}, {
  3.6224622104007883`*^9, 3.6224622134477067`*^9}, {3.6285330348151703`*^9, 
  3.6285330632873077`*^9}, {3.6285333239052825`*^9, 3.6285333591582117`*^9}, {
  3.628533459210045*^9, 3.62853356807408*^9}, {3.6285344639579315`*^9, 
  3.6285344679647694`*^9}, {3.62853457680678*^9, 3.6285345784729447`*^9}, {
  3.628534645432333*^9, 3.6285346543776627`*^9}, {3.628534705522857*^9, 
  3.62853471722714*^9}, {3.6285348288841605`*^9, 3.6285348410697837`*^9}, {
  3.62853651803812*^9, 3.6285365189937844`*^9}, {3.6285366312462063`*^9, 
  3.628536640528796*^9}, {3.6291080469720116`*^9, 3.6291080491443253`*^9}, {
  3.6454390245936766`*^9, 3.645439032250188*^9}, {3.645439078384325*^9, 
  3.6454390851759825`*^9}, {3.6454391207430143`*^9, 3.6454391315851865`*^9}, {
  3.645439331731138*^9, 3.6454393489595556`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dLog\[CapitalOmega]dLogR", "[", 
   RowBox[{"R_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"R", "/", 
     RowBox[{"\[CapitalOmega]", "[", 
      RowBox[{"R", ",", "z"}], "]"}]}], ")"}], "*", 
   RowBox[{"\[CapitalOmega]dR", "[", 
    RowBox[{"R", ",", "z"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dLog\[CapitalOmega]dLogz", "[", 
   RowBox[{"R_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"z", "/", 
     RowBox[{"\[CapitalOmega]", "[", 
      RowBox[{"R", ",", "z"}], "]"}]}], ")"}], "*", 
   RowBox[{"\[CapitalOmega]dz", "[", 
    RowBox[{"R", ",", "z"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6223665488909993`*^9, 3.62236654950038*^9}, {
   3.622366601438366*^9, 3.622366601828992*^9}, {3.622366793821808*^9, 
   3.6223667966968346`*^9}, {3.622369938830878*^9, 3.6223699408777695`*^9}, 
   3.622463507540239*^9, {3.622463651151636*^9, 3.6224636517610493`*^9}, {
   3.6234269696918583`*^9, 3.6234269698369627`*^9}, {3.6236649008959274`*^9, 
   3.6236649014410343`*^9}, {3.6236650454622045`*^9, 
   3.6236650457172813`*^9}, {3.6236650871833973`*^9, 
   3.6236650912191877`*^9}, {3.623665139963716*^9, 3.623665158257288*^9}, 
   3.623666238638392*^9, {3.6236705263168015`*^9, 3.6236705852835445`*^9}, {
   3.6236711548384476`*^9, 3.623671200302964*^9}, {3.6236712345941114`*^9, 
   3.623671235094232*^9}, {3.6236712709162283`*^9, 3.623671271296305*^9}, {
   3.6236713239866014`*^9, 3.6236713511613393`*^9}, {3.6236716907878923`*^9, 
   3.623671701299946*^9}, {3.6236745574400635`*^9, 3.62367455748507*^9}, {
   3.6241118106934137`*^9, 3.624111811115717*^9}, 3.6285348118020697`*^9, {
   3.6391217115756855`*^9, 3.639121712485839*^9}, {3.6454235528495054`*^9, 
   3.645423564866864*^9}, {3.6454236177231817`*^9, 3.64542362907871*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "THESE", " ", "APPLY", " ", "IN", " ", "THE", " ", "RADIATIVE", " ", 
    "ZONE"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Sigma]", "[", 
      RowBox[{"R_", ",", "z_"}], "]"}], "=", 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"R", ",", "z"}], "]"}], "*", 
       RowBox[{
        RowBox[{"\[Rho]", "[", 
         RowBox[{"R", ",", "z"}], "]"}], "^", 
        RowBox[{"(", 
         RowBox[{"-", "\[Gamma]"}], ")"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Sigma]dR", "[", 
      RowBox[{"R_", ",", "z_"}], "]"}], "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", "[", 
        RowBox[{"R", ",", "z"}], "]"}], ",", "R"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Sigma]dz", "[", 
      RowBox[{"R_", ",", "z_"}], "]"}], "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", "[", 
        RowBox[{"R", ",", "z"}], "]"}], ",", "z"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Sigma]dr", "[", 
      RowBox[{"R_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Sigma]dR", "[", 
        RowBox[{"R", ",", "z"}], "]"}], "*", 
       FractionBox["R", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["R", "2"], "+", 
          SuperscriptBox["z", "2"]}]]]}], "+", 
      RowBox[{
       RowBox[{"\[Sigma]dz", "[", 
        RowBox[{"R", ",", "z"}], "]"}], "*", 
       FractionBox["z", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["R", "2"], "+", 
          SuperscriptBox["z", "2"]}]]]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Sigma]dLogr", "[", 
      RowBox[{"R_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      SqrtBox[
       RowBox[{
        SuperscriptBox["R", "2"], "+", 
        SuperscriptBox["z", "2"]}]], "*", 
      RowBox[{"\[Sigma]dr", "[", 
       RowBox[{"R", ",", "z"}], "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6224636312138395`*^9, 3.622463632495154*^9}, {
   3.6234271060358305`*^9, 3.6234271087407513`*^9}, {3.624111837628564*^9, 
   3.624111846655972*^9}, {3.645364174655267*^9, 3.6453641899836135`*^9}, {
   3.645364279141159*^9, 3.645364283188061*^9}, {3.645364399783539*^9, 
   3.645364539473069*^9}, 3.6454245632372327`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "THESE", " ", "APPLY", " ", "IN", " ", "THE", " ", "CONVECTIVE", " ", 
      "ZONE", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "d\[Sigma]dLogr"}], "=", 
     RowBox[{
      RowBox[{"-", "2.3"}], "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "5"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"d\[Sigma]d\[Theta]", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"rper", "*", "\[Gamma]", "*", "Rper"}], 
       RowBox[{"Grav", "[", "rper", "]"}]], "*", "2", "*", 
      RowBox[{"\[CapitalOmega]", "[", 
       RowBox[{"Rper", ",", "zper"}], "]"}], "*", 
      RowBox[{"\[CapitalOmega]dz", "[", 
       RowBox[{"Rper", ",", "zper"}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Balbus", " ", "says", " ", "it", " ", "is"}], " ", "-", 
      RowBox[{"4", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Sigma]dR", "[", 
      RowBox[{"R_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]per", "]"}], "*", 
        FractionBox["1", "rper"], "*", "d\[Sigma]dLogr"}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]per", "]"}], "*", 
        FractionBox["1", "rper"], "d\[Sigma]d\[Theta]", "*", "1", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"\[Sigma]dz", "[", 
         RowBox[{"R_", ",", "z_"}], "]"}]}]}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]per", "]"}], "*", 
        FractionBox["1", "rper"], "*", "d\[Sigma]dLogr"}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]per", "]"}], "*", 
        FractionBox["1", "rper"], "*", "d\[Sigma]d\[Theta]", "*", 
        "1"}]}]}]}]}], "    ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Sigma]dz", "[", 
     RowBox[{"R_", ",", "z_"}], "]"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"Pdz", "[", 
       RowBox[{"Rper", ",", "zper"}], "]"}], 
      RowBox[{"PdR", "[", 
       RowBox[{"Rper", ",", "zper"}], "]"}]], 
     RowBox[{"\[Sigma]dR", "[", 
      RowBox[{"R", ",", "z"}], "]"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.623427058917317*^9, 3.623427100375803*^9}, {
  3.623491345172367*^9, 3.623491399563404*^9}, {3.623491440657501*^9, 
  3.6234914410637226`*^9}, {3.6234914725952005`*^9, 3.62349147876712*^9}, {
  3.623491512464986*^9, 3.6234915541059127`*^9}, {3.623491746325046*^9, 
  3.623491751403185*^9}, {3.624111817901561*^9, 3.6241118348465786`*^9}, {
  3.6285903172717705`*^9, 3.628590319428526*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AngMom", "[", 
     RowBox[{"R_", ",", "z_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[CapitalOmega]", "[", 
       RowBox[{"R", ",", "z"}], "]"}], 
      SuperscriptBox["R", "2"]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ldR", ":=", 
   FractionBox[
    RowBox[{
     RowBox[{"AngMom", "[", 
      RowBox[{
       RowBox[{"Rper", "+", 
        SuperscriptBox["10", "4"]}], ",", "zper"}], "]"}], "-", 
     RowBox[{"AngMom", "[", 
      RowBox[{"Rper", ",", "zper"}], "]"}]}], 
    SuperscriptBox["10", "4"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ldz", ":=", 
    FractionBox[
     RowBox[{
      RowBox[{"AngMom", "[", 
       RowBox[{"Rper", ",", 
        RowBox[{"zper", "+", 
         SuperscriptBox["10", "4"]}]}], "]"}], "-", 
      RowBox[{"AngMom", "[", 
       RowBox[{"Rper", ",", "zper"}], "]"}]}], 
     SuperscriptBox["10", "4"]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l2dR", ":=", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"AngMom", "[", 
       RowBox[{
        RowBox[{"Rper", "+", 
         SuperscriptBox["10", "4"]}], ",", "zper"}], "]"}], "2"], "-", 
     SuperscriptBox[
      RowBox[{"AngMom", "[", 
       RowBox[{"Rper", ",", "zper"}], "]"}], "2"]}], 
    SuperscriptBox["10", "4"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"l2dz", ":=", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"AngMom", "[", 
        RowBox[{"Rper", ",", 
         RowBox[{"zper", "+", 
          SuperscriptBox["10", "4"]}]}], "]"}], "2"], "-", 
      SuperscriptBox[
       RowBox[{"AngMom", "[", 
        RowBox[{"Rper", ",", "zper"}], "]"}], "2"]}], 
     SuperscriptBox["10", "4"]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]2dR", ":=", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[CapitalOmega]", "[", 
       RowBox[{
        RowBox[{"Rper", "+", 
         SuperscriptBox["10", "4"]}], ",", "zper"}], "]"}], "2"], "-", 
     SuperscriptBox[
      RowBox[{"\[CapitalOmega]", "[", 
       RowBox[{"Rper", ",", "zper"}], "]"}], "2"]}], 
    SuperscriptBox["10", "4"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]2dz", ":=", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[CapitalOmega]", "[", 
        RowBox[{"Rper", ",", 
         RowBox[{"zper", "+", 
          SuperscriptBox["10", "4"]}]}], "]"}], "2"], "-", 
      SuperscriptBox[
       RowBox[{"\[CapitalOmega]", "[", 
        RowBox[{"Rper", ",", "zper"}], "]"}], "2"]}], 
     SuperscriptBox["10", "4"]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.622368522874709*^9, 3.6223685482605577`*^9}, {
   3.6223685984906545`*^9, 3.6223686850398088`*^9}, {3.622369585174037*^9, 
   3.6223696057211013`*^9}, {3.6223704204198275`*^9, 3.6223704256854486`*^9}, 
   3.622371073051177*^9, {3.6224622921831927`*^9, 3.622462292558198*^9}, {
   3.622546335537529*^9, 3.622546345521996*^9}, {3.6236706315525713`*^9, 
   3.62367073000185*^9}, {3.6236717159578123`*^9, 3.623671831750436*^9}, {
   3.6241109454360647`*^9, 3.6241109707410345`*^9}, {3.6241111535549536`*^9, 
   3.624111157503761*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BR", "[", 
    RowBox[{"R_", ",", "z_"}], "]"}], "=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B\[Phi]", "[", 
    RowBox[{"R_", ",", "z_"}], "]"}], "=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Bz", "[", 
     RowBox[{"R_", ",", "z_"}], "]"}], "=", "0"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UaR", "[", 
    RowBox[{"R_", ",", "z_"}], "]"}], "=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ua\[Phi]", "[", 
    RowBox[{"R_", ",", "z_"}], "]"}], "=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Uaz", "[", 
    RowBox[{"R_", ",", "z_"}], "]"}], "=", "0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.624109963578259*^9, 3.624110032372158*^9}, {
  3.6241101026741095`*^9, 3.6241101171724377`*^9}, {3.6285976079210973`*^9, 
  3.628597609346342*^9}, {3.6393182418779984`*^9, 3.639318256841423*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[CapitalOmega]", "[", 
      RowBox[{
       RowBox[{"0.6", "Rsun", "*", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "4"], "]"}]}], ",", 
       RowBox[{"0.6", "Rsun", "*", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "4"], "]"}]}]}], "]"}], "*", "0.6", "Rsun"}], 
    ")"}], "2"], 
  RowBox[{"\[Gamma]", "*", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{
      RowBox[{"0.6", "Rsun", "*", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}], ",", 
      RowBox[{"0.6", "Rsun", "*", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}]}], "]"}], "/", 
    RowBox[{"\[Rho]", "[", 
     RowBox[{
      RowBox[{"0.6", "Rsun", "*", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}], ",", 
      RowBox[{"0.6", "Rsun", "*", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}]}], 
     "]"}]}]}]], "\[IndentingNewLine]", 
 RowBox[{"dLogPdLogr", "[", 
  RowBox[{
   RowBox[{"0.6", "Rsun", "*", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}], ",", 
   RowBox[{"0.6", "Rsun", "*", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Sigma]dLogr", "[", 
  RowBox[{
   RowBox[{"0.6", "Rsun", "*", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}], ",", 
   RowBox[{"0.6", "Rsun", "*", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"dLog\[CapitalOmega]dLogR", "[", 
  RowBox[{
   RowBox[{"0.6", "Rsun", "*", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}], ",", 
   RowBox[{"0.6", "Rsun", "*", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"dLog\[CapitalOmega]dLogz", "[", 
  RowBox[{
   RowBox[{"0.6", "Rsun", "*", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}], ",", 
   RowBox[{"0.6", "Rsun", "*", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[CapitalOmega]", "[", 
      RowBox[{
       RowBox[{"0.7", "Rsun", "*", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "4"], "]"}]}], ",", 
       RowBox[{"0.7", "Rsun", "*", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "4"], "]"}]}]}], "]"}], "*", "0.7", "Rsun"}], 
    ")"}], "2"], 
  RowBox[{"\[Gamma]", "*", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{
      RowBox[{"0.7", "Rsun", "*", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}], ",", 
      RowBox[{"0.7", "Rsun", "*", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}]}], "]"}], "/", 
    RowBox[{"\[Rho]", "[", 
     RowBox[{
      RowBox[{"0.7", "Rsun", "*", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}], ",", 
      RowBox[{"0.7", "Rsun", "*", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Pi]", "4"], "]"}]}]}], 
     "]"}]}]}]], "\[IndentingNewLine]", 
 RowBox[{"dLogPdLogr", "[", 
  RowBox[{
   RowBox[{"0.7", "Rsun", "*", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}], ",", 
   RowBox[{"0.7", "Rsun", "*", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Sigma]dLogr", "[", 
  RowBox[{
   RowBox[{"0.7", "Rsun", "*", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}], ",", 
   RowBox[{"0.7", "Rsun", "*", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"dLog\[CapitalOmega]dLogR", "[", 
  RowBox[{
   RowBox[{"0.7", "Rsun", "*", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}], ",", 
   RowBox[{"0.7", "Rsun", "*", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"dLog\[CapitalOmega]dLogz", "[", 
  RowBox[{
   RowBox[{"0.7", "Rsun", "*", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}], ",", 
   RowBox[{"0.7", "Rsun", "*", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6454380276047335`*^9, 3.6454381613945074`*^9}, {
  3.6454396152126474`*^9, 3.6454396305606804`*^9}, {3.6454400183180065`*^9, 
  3.645440119978202*^9}}],

Cell[BoxData["0.00001786796934750859`"], "Output",
 CellChangeTimes->{{3.6454380916606655`*^9, 3.645438161674543*^9}, 
   3.645439149338681*^9, 3.645439353420425*^9, 3.64543963267111*^9, 
   3.6454400807654085`*^9, 3.645440120223222*^9, 3.645521599985074*^9, 
   3.645521855711868*^9, 3.6476940474009714`*^9, 3.6581432628715577`*^9}],

Cell[BoxData[
 RowBox[{"-", "6.929683363580096`"}]], "Output",
 CellChangeTimes->{{3.6454380916606655`*^9, 3.645438161674543*^9}, 
   3.645439149338681*^9, 3.645439353420425*^9, 3.64543963267111*^9, 
   3.6454400807654085`*^9, 3.645440120223222*^9, 3.645521599985074*^9, 
   3.645521855711868*^9, 3.6476940474009714`*^9, 3.6581432628715577`*^9}],

Cell[BoxData["2.6173685328338423`"], "Output",
 CellChangeTimes->{{3.6454380916606655`*^9, 3.645438161674543*^9}, 
   3.645439149338681*^9, 3.645439353420425*^9, 3.64543963267111*^9, 
   3.6454400807654085`*^9, 3.645440120223222*^9, 3.645521599985074*^9, 
   3.645521855711868*^9, 3.6476940474009714`*^9, 3.658143262887167*^9}],

Cell[BoxData[
 RowBox[{"-", "0.0010820725061996194`"}]], "Output",
 CellChangeTimes->{{3.6454380916606655`*^9, 3.645438161674543*^9}, 
   3.645439149338681*^9, 3.645439353420425*^9, 3.64543963267111*^9, 
   3.6454400807654085`*^9, 3.645440120223222*^9, 3.645521599985074*^9, 
   3.645521855711868*^9, 3.6476940474009714`*^9, 3.658143262887167*^9}],

Cell[BoxData[
 RowBox[{"-", "0.019819027689242243`"}]], "Output",
 CellChangeTimes->{{3.6454380916606655`*^9, 3.645438161674543*^9}, 
   3.645439149338681*^9, 3.645439353420425*^9, 3.64543963267111*^9, 
   3.6454400807654085`*^9, 3.645440120223222*^9, 3.645521599985074*^9, 
   3.645521855711868*^9, 3.6476940474009714`*^9, 3.658143262887167*^9}],

Cell[BoxData["0.00003247875496465301`"], "Output",
 CellChangeTimes->{{3.6454380916606655`*^9, 3.645438161674543*^9}, 
   3.645439149338681*^9, 3.645439353420425*^9, 3.64543963267111*^9, 
   3.6454400807654085`*^9, 3.645440120223222*^9, 3.645521599985074*^9, 
   3.645521855711868*^9, 3.6476940474009714`*^9, 3.658143262887167*^9}],

Cell[BoxData[
 RowBox[{"-", "9.102856192121566`"}]], "Output",
 CellChangeTimes->{{3.6454380916606655`*^9, 3.645438161674543*^9}, 
   3.645439149338681*^9, 3.645439353420425*^9, 3.64543963267111*^9, 
   3.6454400807654085`*^9, 3.645440120223222*^9, 3.645521599985074*^9, 
   3.645521855711868*^9, 3.6476940474009714`*^9, 3.658143262887167*^9}],

Cell[BoxData["1.1450918119419566`"], "Output",
 CellChangeTimes->{{3.6454380916606655`*^9, 3.645438161674543*^9}, 
   3.645439149338681*^9, 3.645439353420425*^9, 3.64543963267111*^9, 
   3.6454400807654085`*^9, 3.645440120223222*^9, 3.645521599985074*^9, 
   3.645521855711868*^9, 3.6476940474009714`*^9, 3.658143262887167*^9}],

Cell[BoxData[
 RowBox[{"-", "0.11342725170690399`"}]], "Output",
 CellChangeTimes->{{3.6454380916606655`*^9, 3.645438161674543*^9}, 
   3.645439149338681*^9, 3.645439353420425*^9, 3.64543963267111*^9, 
   3.6454400807654085`*^9, 3.645440120223222*^9, 3.645521599985074*^9, 
   3.645521855711868*^9, 3.6476940474009714`*^9, 3.658143262887167*^9}],

Cell[BoxData[
 RowBox[{"-", "0.240187267691821`"}]], "Output",
 CellChangeTimes->{{3.6454380916606655`*^9, 3.645438161674543*^9}, 
   3.645439149338681*^9, 3.645439353420425*^9, 3.64543963267111*^9, 
   3.6454400807654085`*^9, 3.645440120223222*^9, 3.645521599985074*^9, 
   3.645521855711868*^9, 3.6476940474009714`*^9, 3.658143262887167*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Num", "[", 
    RowBox[{"x_", ",", "R_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", "\[Gamma]"}], 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"dLogPdLogr", "[", 
          RowBox[{"R", ",", "z"}], "]"}], "*", 
         RowBox[{"\[Sigma]dLogr", "[", 
          RowBox[{"R", ",", "z"}], "]"}]}], ")"}]}]]}], "*", 
    FractionBox[
     RowBox[{"2", "+", 
      RowBox[{"dLog\[CapitalOmega]dLogR", "[", 
       RowBox[{"R", ",", "z"}], "]"}], "-", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"R", "/", "z"}], ")"}], "*", 
       RowBox[{"dLog\[CapitalOmega]dLogz", "[", 
        RowBox[{"R", ",", "z"}], "]"}]}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "*", 
         FractionBox["z", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["R", "2"], "+", 
            SuperscriptBox["z", "2"]}]]]}], "-", 
        FractionBox["R", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["R", "2"], "+", 
           SuperscriptBox["z", "2"]}]]]}], ")"}], "2"]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.645423432170617*^9, 3.6454235385116463`*^9}, {
   3.6454236734269204`*^9, 3.645423785889164*^9}, 3.6454238183705864`*^9, {
   3.6454242659933577`*^9, 3.645424266923543*^9}, {3.645438176552517*^9, 
   3.645438176652542*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NumFactTable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"r", "/", "Rsun"}], ",", 
       RowBox[{
        RowBox[{"NMaximize", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Num", "[", 
             RowBox[{"x", ",", 
              RowBox[{"r", "*", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
              RowBox[{"r", "*", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "]"}], ",", 
            RowBox[{"x", ">", 
             RowBox[{"-", 
              SuperscriptBox["10", "6"]}]}], ",", 
            RowBox[{"x", "<", 
             SuperscriptBox["10", "6"]}]}], "}"}], ",", "x"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{
        FractionBox["5", "180"], "Pi"}], ",", 
       RowBox[{
        FractionBox["85", "180"], "Pi"}], ",", 
       RowBox[{
        FractionBox["5", "180"], "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"0.5", "Rsun"}], ",", 
       RowBox[{"0.7", "Rsun"}], ",", 
       RowBox[{"0.002", "Rsun"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Pigkappa\\\\Dropbox\\\\fisica\\\\PhD\\\\\
AngularMomentumTransfer\\\\Minimum Pr\\\\NumFactData.dat\>\"", ",", 
       "NumFactTable", ",", "\"\<Table\>\""}], "]"}], "\[IndentingNewLine]", 
     "NumFactTable"}], "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Pigkappa\\\\Dropbox\\\\fisica\\\\PhD\\\\\
AngularMomentumTransfer\\\\Minimum Pr\\\\NumFactData.dat\>\"", ",", 
      "\"\<Table\>\""}], "]"}]}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.645423877937394*^9, 3.6454240352835555`*^9}, {
   3.6454240841082215`*^9, 3.6454240924798775`*^9}, {3.6454241531368866`*^9, 
   3.64542416790481*^9}, {3.645424674724272*^9, 3.6454246888970785`*^9}, {
   3.6454247336759424`*^9, 3.645424737686737*^9}, {3.645424778934874*^9, 
   3.645424779169948*^9}, 3.645426023997301*^9, {3.6454261861443996`*^9, 
   3.645426202447627*^9}, {3.645426328917639*^9, 3.645426329652808*^9}, {
   3.6454270950061393`*^9, 3.645427110909259*^9}, 3.645427260289364*^9, {
   3.6454273221616*^9, 3.645427343125763*^9}, {3.645427379567954*^9, 
   3.645427390490128*^9}, {3.6454275887293835`*^9, 3.645427596931007*^9}, {
   3.6454276382391853`*^9, 3.645427644055335*^9}, {3.6454277107035317`*^9, 
   3.6454277165596886`*^9}, {3.6454277667046165`*^9, 3.645427767989865*^9}, {
   3.6454278883637*^9, 3.645427896305299*^9}, {3.6454280689544506`*^9, 
   3.645428085227662*^9}, {3.645428133237172*^9, 3.6454281333521986`*^9}, {
   3.645428544043502*^9, 3.6454285447986507`*^9}, 3.6454381917997217`*^9, {
   3.6454383347065563`*^9, 3.6454383651225905`*^9}, {3.6454384207836328`*^9, 
   3.6454384234591427`*^9}, {3.64543847290723*^9, 3.6454384730172386`*^9}, {
   3.6454394093415346`*^9, 3.645439414667591*^9}, {3.645439457701129*^9, 
   3.6454394663028326`*^9}, {3.645439804221015*^9, 3.645439812327625*^9}, {
   3.6454400013596706`*^9, 3.6454400053904696`*^9}, {3.645441520932926*^9, 
   3.645441544112502*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               FractionBox["\[Pi]", "36"], ",", "0.5`", ",", 
               "8.709028043705488`*^-10"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["\[Pi]", "36"], ",", "0.502`", ",", 
               "3.128031571686601`*^-9"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["\[Pi]", "36"], ",", "0.504`", ",", 
               "1.6358730466506967`*^-8"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["\[Pi]", "36"], ",", "0.506`", ",", 
               "3.33559951883336`*^-8"}], "}"}], ",", 
             TemplateBox[{"94"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["\[Pi]", "36"], ",", "0.696`", ",", 
               "0.0004894119623442766`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["\[Pi]", "36"], ",", "0.698`", ",", 
               "0.0005162277000530857`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["\[Pi]", "36"], ",", "0.7`", ",", 
               "0.000538980252805399`"}], "}"}]}], "}"}], ",", 
           TemplateBox[{"15"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
               GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{171., {7., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{140., {1., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 96, 26106624181502750714, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{162., {1., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 96, 26106624181502750714, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{121., {1., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 96, 26106624181502750714, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{207., {1., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[96]]], "Output",
 CellChangeTimes->{{3.6454383323610764`*^9, 3.645438378095151*^9}, 
   3.64543844049253*^9, 3.645438506573902*^9, 3.645439181905157*^9, 
   3.645439393798438*^9, 3.645439437577124*^9, 3.6454395032954454`*^9, 
   3.6454398440138807`*^9, 3.6454400279199266`*^9, 3.6454415490584917`*^9, 
   3.645521724955329*^9, 3.645521995557293*^9, 3.647694210657998*^9, 
   3.65814340367756*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"NumFactFunction", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"NumFactTable", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6454279221903815`*^9, 3.6454279417242355`*^9}, {
  3.6454279802218866`*^9, 3.6454280280413523`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NumPlot15", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"NumFactFunction", "[", 
      RowBox[{
       RowBox[{"15", 
        RowBox[{"Pi", "/", "180"}]}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.5", ",", "0.7"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.005"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Dashed"}], "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumPlot45", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"NumFactFunction", "[", 
      RowBox[{
       RowBox[{"45", 
        RowBox[{"Pi", "/", "180"}]}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.5", ",", "0.7"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.005"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Black", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumPlot75", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"NumFactFunction", "[", 
      RowBox[{
       RowBox[{"75", 
        RowBox[{"Pi", "/", "180"}]}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.5", ",", "0.7"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.005"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Dotted"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"NumPlot15", ",", "NumPlot45", ",", "NumPlot75", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<r / \!\(\*SubscriptBox[\(R\), \(\[CircleDot]\)]\)\>\"", ",", 
      "\"\<\!\(\*
StyleBox[\"Max\",
FontWeight->\"Plain\"]\)\!\(\*
StyleBox[\"[\",
FontWeight->\"Plain\"]\)N(x;r,\[Theta])\!\(\*
StyleBox[\"]\",
FontWeight->\"Plain\"]\)\>\""}], "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontWeight", "\[Rule]", "\"\<Plain\>\""}], ",", 
      RowBox[{"FontSize", "\[Rule]", "16"}]}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontWeight", "\[Rule]", "\"\<Plain\>\""}], ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.645428030261781*^9, 3.645428047645233*^9}, {
   3.64542810536163*^9, 3.645428121894902*^9}, 3.645428266068474*^9, {
   3.6454284213142076`*^9, 3.6454284514051633`*^9}, {3.645438456994076*^9, 
   3.645438458449365*^9}, {3.6454392042345996`*^9, 3.6454392594305277`*^9}, {
   3.6454394862117586`*^9, 3.6454395267451024`*^9}, {3.645439565057698*^9, 
   3.645439573439375*^9}, {3.645439855611208*^9, 3.64543987265333*^9}, {
   3.645440175934816*^9, 3.6454401819410067`*^9}, {3.64544156999766*^9, 
   3.6454415803797207`*^9}, {3.6455216262978745`*^9, 3.645521758033829*^9}, {
   3.6455217882998714`*^9, 3.6455218486024694`*^9}, {3.645522025401459*^9, 
   3.6455220689644804`*^9}, {3.6455221040586514`*^9, 3.64552218023138*^9}, 
   3.645522226231992*^9, {3.6476940217116046`*^9, 3.6476940242871075`*^9}, 
   3.6476940767517147`*^9, {3.6476942536714087`*^9, 3.647694257762233*^9}, {
   3.6581432953564157`*^9, 3.658143304559708*^9}, {3.6581434482876244`*^9, 
   3.6581434484438763`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQvf6nAZB6YL/ttJnAp//NdpNWTF3aAOQHp1x4vPJr
k11J+C8PRsYH9mLJzccWfW60s9p6uJ+J6YH9ukMzJvxib7CTSdEwbgbygzoi
j4fa1Nn9F+q9xsz8wN7ocJVVXUWN3ZGCMFlWlgf2fkn5ZjnylXbL5HcfaAXy
P/xfOu1KZ7ld5zn5FDbWB/ZOnnOKvJjL7Px0Xq5iZ3tgPz+uz2eJUrGdwW1f
vw4gXzjlraL2iUI74a5NHznYH9h/67ikyFpTYHfjebUFF8cD+y2xr+d/kM6x
2zXtwe0uIH/iJd3VGdcz7ea6utZzcz6w35nLmSm0Lt0uaTHfMR6uB/by/JJR
bauT7VyDijN7gfzlLcI20y4m2mkw3uDh435gv4zbRC9ZMMHubdzCYH6eB/bm
+S8c6ndG2l3gZfveD+T7z9wyT/N8mN2mPVmzBHgf2G/c8ex6imiI3dTs87YT
gfwzpq6zy7oD7SqkTB4K8j2wZxPW1fdM9LOLOjmjZRKQ3xLm9D2Dw8vOtuKv
ujD/A/sQ7vA317nc7BTUk05PBvI5FH9kK6Y72TFdO5YnIvDA/jhH6vKF5nZ2
T1q0haYC+Rc01Jge+1nYHTeesFVU8IF9R6rvYllBY7tVj75ETAPyfxi87L7w
TceuZ2LkHzEhIF8722uzqKpdnsO++dOB/AOtKz4ofpKxC3yv5Cwh/MDegHeD
uJ6ZkJ3JvPZnM4D8A3Ur3py+zmwn5vumU1LkgT1D5sfHE+U+2P74HaA7C8S/
c59ZuXC/7ecVF5vPgvhQAADJzv5h
      "]], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
nf71/6//AYofw1I=
      "]], LineBox[CompressedData["
1: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
2votZzLY0sqYvtwaQmFi2ty/sGdKzj27UTmEOP9kHL19G/9/6T0GFbeGkMQD
FUtXFzJcaljbkhv5ikzKwj96upHBMe5pd0XzIKqg440P8CLDb3uII77uR6jT
7vk2NplNSlfwTj9qTXvbFORNBlrUJTWn2I8mpK4t3fMhg6C4xG/9pj7EZppn
HuZLhpGXlB1VX3uRY7HswbgAMt5PeRLaBHqQyCW9mpxQ/P+buPMqhtrRhW/P
/pMKI8Mw68V1QYd25Gq5Gl+Nrea/wXd2vQ3VOT216w4ng1325aUBoTZkHvqX
myaKDFO0chdG3VpQYlWay/VYMmzomo85nvuI3irPms9g70tpDP+P0owmmlQ0
fOKwb2+KM4Q2I+kvP/bFxZMhrvJ+onnrB9Q2pdRWl0gGydRVadobTWjeOf61
VhIZDnnvS5fd3YT4Fyk5g9gVOaqxjZWNyJYm1ud3Mq63l+LOBLZGRLdnQkwo
jQxSV6NpR/vq0eHsExxF2Cnu1r77deqR/sHIjZPpuF5MnSj7WutQ1nHZXp1H
ZDhJIx7G0foeKWo9CAp4Qoa/y29TDafeoRvdQ45MGWQwLMrRoHi+QxEmR01S
sC0JY50NO9+hQatBqdJMMoj4uVwSOVKD3O9KfBvJJkPgB+eJ7fhq9Ig24KN9
DhnidR7+sDhWjRrCe8oXsSM8xcoefXmD2JL9wllyyfCRZeSKHc8bVFTScUI5
jwyVccSpb5WvEWnUNe5JIe4HQlkLBlKv0IvTI7Niz8mwi9+9/jSxAvknaWqV
YSd/MywQT6tAvBeE6BuLyHDXQePbHH0F0qps95sswfFx0tSW/l2OXkWJ2x5/
SQbx6YD0xMZSFExN+FCDbV16t0v0bCnSVdkSVq8gw6jLXNvDjyVoeqnvu8kr
nL/aJkqJHcVo3417Bv6vcf30Vy2bEp+jB6dGlD+/JUNb4SUuD4f/kEGi5mP9
GjLs0VJ6pTCUh4R+VawMY5ukOpQtauah6tzIitl3uJ5+eZLKJJ+hX6ynJLjq
yMDTLhW5i+YpqrHPDX2CfXpFXl3NNwdFfGAli9WTwTXJ9fa96Wwk4kvJPNVA
hsILc1PD45nIhJJAuNZEhgN1/wkX0T5GorDlOoltuLD63zzPIzT3yL7L5QMZ
5p0fmVw5lo6i9CAypJkMX9+4pVm7pyLToqJJ5o/479XvmThkpCAxel71FOyM
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
hkd0nr7dDf4PuUalyQ==
      "]]}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], Dashing[{0, Small}], 
     LineBox[CompressedData["
1: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
E+P3nQ==
      "]], LineBox[CompressedData["
1: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
horLG3ZtqPEneXp7o/Vd9DbgGdOC/wPAt35K
      "]]}}, InsetBox[
    FrameBox[
     TagBox[GridBox[{
        {
         GraphicsBox[{{{}, {
             {GrayLevel[0], PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
                StyleBox["\<\"\[FilledCircle]\"\>",
                 StripOnInput->False,
                 FontSize->10], {0., 0.}], {{{0., 0.}}, {{0., 
               0.}}}]}, {}}, {}}, {{}, {{}, {}, 
             {GrayLevel[0], PointSize[0.019444444444444445`], Thickness[
              Large], Dashing[{Small, Small}], 
              LineBox[{{-1., 0.}, {1., 0.}}]}}, {}}},
          AspectRatio->0.1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Frame->{{False, False}, {False, False}},
          FrameLabel->{{None, None}, {None, None}},
          FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          Method->{},
          PlotRange->{{-1., 1.}, {-1., 1.}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}},
          Ticks->{Automatic, Automatic}], "\<\"\[Theta] = 15\[Degree]\"\>"},
        {
         GraphicsBox[{{{}, {
             {GrayLevel[0], PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
                StyleBox["\<\"\[FilledCircle]\"\>",
                 StripOnInput->False,
                 FontSize->10], {0., 0.}], {{{0., 0.}}, {{0., 
               0.}}}]}, {}}, {}}, {{}, {{}, {}, 
             {GrayLevel[0], PointSize[0.019444444444444445`], Thickness[
              Large], LineBox[{{-1., 0.}, {1., 0.}}]}}, {}}},
          AspectRatio->0.1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Frame->{{False, False}, {False, False}},
          FrameLabel->{{None, None}, {None, None}},
          FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          Method->{},
          PlotRange->{{-1., 1.}, {-1., 1.}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}},
          Ticks->{Automatic, Automatic}], "\<\"\[Theta] = 45\[Degree]\"\>"},
        {
         GraphicsBox[{{{}, {
             {GrayLevel[0], PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
                StyleBox["\<\"\[FilledCircle]\"\>",
                 StripOnInput->False,
                 FontSize->10], {0., 0.}], {{{0., 0.}}, {{0., 
               0.}}}]}, {}}, {}}, {{}, {{}, {}, 
             {GrayLevel[0], PointSize[0.019444444444444445`], Thickness[
              Large], Dashing[{0, Small}], 
              LineBox[{{-1., 0.}, {1., 0.}}]}}, {}}},
          AspectRatio->0.1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Frame->{{False, False}, {False, False}},
          FrameLabel->{{None, None}, {None, None}},
          FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          Method->{},
          PlotRange->{{-1., 1.}, {-1., 1.}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}},
          Ticks->{Automatic, Automatic}], "\<\"\[Theta] = 75\[Degree]\"\>"}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"],
     StripOnInput->False], Scaled[{0.2363313458811856, 0.8224534568701254}], 
    Center, {0.08820694902734019, 0.0017200291862723921`}, {{1., 0.}, {0., 
    1.}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5, 0},
  BaseStyle->{FontWeight -> "Plain", FontSize -> 16},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{
    FormBox[
    "\"r / \\!\\(\\*SubscriptBox[\\(R\\), \\(\[CircleDot]\\)]\\)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"Max\\\",\\nFontWeight->\\\"Plain\\\"]\\)\\!\\(\
\\*\\nStyleBox[\\\"[\\\",\\nFontWeight->\\\"Plain\\\"]\\)N(x;r,\[Theta])\\!\\(\
\\*\\nStyleBox[\\\"]\\\",\\nFontWeight->\\\"Plain\\\"]\\)\"", 
     TraditionalForm]},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{66.588235, 16.176471}, {47.176471, 9.411765}},
  ImageSize->{546.4705882352919, Automatic},
  LabelStyle->GrayLevel[0],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.5, 0.7}, {0., 0.005}},
  PlotRangeClipping->True,
  PlotRangePadding->Automatic,
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.658143454350218*^9, 3.658143454459594*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LegendKey", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta] = 15\[Degree]\>\"", ",", "Black", ",", "Dashed"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta] = 45\[Degree]\>\"", ",", "Black", ",", " ", "None"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta] = 75\[Degree]\>\"", ",", " ", "Black", ",", " ", 
       "Dotted"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CaptionGeneral", "[", "LegendKey", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6455218964467463`*^9, 3.645521971135137*^9}, {
  3.645522232278885*^9, 3.6455222338727083`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NumFactPlot", "=", 
    GraphicsBox[{{{}, {}, 
       {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
        Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQvf6nAZB6YL/ttJnAp//NdpNWTF3aAOQHp1x4vPJr
k11J+C8PRsYH9mLJzccWfW60s9p6uJ+J6YH9ukMzJvxib7CTSdEwbgbygzoi
j4fa1Nn9F+q9xsz8wN7ocJVVXUWN3ZGCMFlWlgf2fkn5ZjnylXbL5HcfaAXy
P/xfOu1KZ7ld5zn5FDbWB/ZOnnOKvJjL7Px0Xq5iZ3tgPz+uz2eJUrGdwW1f
vw4gXzjlraL2iUI74a5NHznYH9h/67ikyFpTYHfjebUFF8cD+y2xr+d/kM6x
2zXtwe0uIH/iJd3VGdcz7ea6utZzcz6w35nLmSm0Lt0uaTHfMR6uB/by/JJR
bauT7VyDijN7gfzlLcI20y4m2mkw3uDh435gv4zbRC9ZMMHubdzCYH6eB/bm
+S8c6ndG2l3gZfveD+T7z9wyT/N8mN2mPVmzBHgf2G/c8ex6imiI3dTs87YT
gfwzpq6zy7oD7SqkTB4K8j2wZxPW1fdM9LOLOjmjZRKQ3xLm9D2Dw8vOtuKv
ujD/A/sQ7vA317nc7BTUk05PBvI5FH9kK6Y72TFdO5YnIvDA/jhH6vKF5nZ2
T1q0haYC+Rc01Jge+1nYHTeesFVU8IF9R6rvYllBY7tVj75ETAPyfxi87L7w
TceuZ2LkHzEhIF8722uzqKpdnsO++dOB/AOtKz4ofpKxC3yv5Cwh/MDegHeD
uJ6ZkJ3JvPZnM4D8A3Ur3py+zmwn5vumU1LkgT1D5sfHE+U+2P74HaA7C8S/
c59ZuXC/7ecVF5vPgvhQAADJzv5h
         "]], LineBox[CompressedData["
1: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
         "]]}}, {{}, {}, 
       {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
nf71/6//AYofw1I=
         "]], LineBox[CompressedData["
1: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
2votZzLY0sqYvtwaQmFi2ty/sGdKzj27UTmEOP9kHL19G/9/6T0GFbeGkMQD
FUtXFzJcaljbkhv5ikzKwj96upHBMe5pd0XzIKqg440P8CLDb3uII77uR6jT
7vk2NplNSlfwTj9qTXvbFORNBlrUJTWn2I8mpK4t3fMhg6C4xG/9pj7EZppn
HuZLhpGXlB1VX3uRY7HswbgAMt5PeRLaBHqQyCW9mpxQ/P+buPMqhtrRhW/P
/pMKI8Mw68V1QYd25Gq5Gl+Nrea/wXd2vQ3VOT216w4ng1325aUBoTZkHvqX
myaKDFO0chdG3VpQYlWay/VYMmzomo85nvuI3irPms9g70tpDP+P0owmmlQ0
fOKwb2+KM4Q2I+kvP/bFxZMhrvJ+onnrB9Q2pdRWl0gGydRVadobTWjeOf61
VhIZDnnvS5fd3YT4Fyk5g9gVOaqxjZWNyJYm1ud3Mq63l+LOBLZGRLdnQkwo
jQxSV6NpR/vq0eHsExxF2Cnu1r77deqR/sHIjZPpuF5MnSj7WutQ1nHZXp1H
ZDhJIx7G0foeKWo9CAp4Qoa/y29TDafeoRvdQ45MGWQwLMrRoHi+QxEmR01S
sC0JY50NO9+hQatBqdJMMoj4uVwSOVKD3O9KfBvJJkPgB+eJ7fhq9Ig24KN9
DhnidR7+sDhWjRrCe8oXsSM8xcoefXmD2JL9wllyyfCRZeSKHc8bVFTScUI5
jwyVccSpb5WvEWnUNe5JIe4HQlkLBlKv0IvTI7Niz8mwi9+9/jSxAvknaWqV
YSd/MywQT6tAvBeE6BuLyHDXQePbHH0F0qps95sswfFx0tSW/l2OXkWJ2x5/
SQbx6YD0xMZSFExN+FCDbV16t0v0bCnSVdkSVq8gw6jLXNvDjyVoeqnvu8kr
nL/aJkqJHcVo3417Bv6vcf30Vy2bEp+jB6dGlD+/JUNb4SUuD4f/kEGi5mP9
GjLs0VJ6pTCUh4R+VawMY5ukOpQtauah6tzIitl3uJ5+eZLKJJ+hX6ynJLjq
yMDTLhW5i+YpqrHPDX2CfXpFXl3NNwdFfGAli9WTwTXJ9fa96Wwk4kvJPNVA
hsILc1PD45nIhJJAuNZEhgN1/wkX0T5GorDlOoltuLD63zzPIzT3yL7L5QMZ
5p0fmVw5lo6i9CAypJkMX9+4pVm7pyLToqJJ5o/479XvmThkpCAxel71FOyM
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
hkd0nr7dDf4PuUalyQ==
         "]]}}, {{}, {}, 
       {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
        Dashing[{0, Small}], LineBox[CompressedData["
1:eJwt1gk0lO/3AHDLWELGlj1bQolEiui5CqUkS7YiW4QSSim7bKGFJIlUlkqS
7C0qkqgkUlnDM/3IUmQZMTOW//M95z/nvOc9nzPnPXPn3vfe+yh6BNh4cbCx
sf0i13/3JwwtcsPw823/g2QrHUgrvH4vmlj3UKzGRXYdOO3ANGNnx2AiyVVU
VaEN26repnBwYNi0MuZ5hIw2NATar+aiYAhlS025Mq8F9+Vr6uKJiyfN110r
14Kkz/Ke3FwYHgs9XF18Qgv2bxgt4uHGUNdinarweSN0DYfp8fFiMBPr4Sj+
pAEvMnBvMnH5tjdZR6w1IMfUNIp/BYa9X089kezaAB75go0CfBgEfBjlXr/V
Ydwl9wBVAEO10+SPGbX1wNHR6C8mhOHgae8UFZYKDMapi1wndqZNFGjkqECT
TmrVKmEMhUNWjb1GKnDp6sEFcREMW+t8UiUurwVxiz9JUmIYvjONF87oKcM8
y0oji9jTZ2G93PAa6C2qapNeheFdlITGzhtr4C5vlISsOPn9p/rUEZYSqDcI
35OTxPA5KZlLrEMRBIOCze4QDyZXJnGmKsKkYu9veSkM3ns+FBqbK0J1VIG2
ojQG4Dorc/edAhgZbK1bI4uBEh4l7ZUmD7blzr1qCiQf3m1j3IKy0C7bYFVJ
7PFg48YDt2XA6oJ6IyhisBH8OTilIQP7nJml9koYCgof5isfkAZT7syEOGUM
7y+sSsh/KknqtcyirsWw3zhuO8VeEnb2Hj2ZTdwUkdHj/08CUKmuc7kKhmc3
f1zdsV0Cthz6ugmrYUjMP5nMoq2CyoZtD46vw5B3IZLyMWUVaG/Mk50jTtyZ
s+AOq0CTcpJHUB0Dh+9unc/5YqBSIthnoEHiKWmzrI4WhQLJYJsmYumoCcu/
BqKgFNvXZKOJ4U/kpaNl8yIg51hc7ruRWC86vzRYBCQ49ibe2ET+r+oX6eUY
YcjwK1tU0sbQkdRg+NxMGMQ6JYNKiLGL1bfXVGEQKh4+/E4Hg0g+1S4tVwh4
7eN1ZnQxTPVEHzV7QIWEuj+FkVswmAaLa/HsogJF3VaObyuGSIp9If2XILCx
rVmhqIdhODolQXWjIMw/rOvfvw1DdrGoSnSnAASLqdn2EEukKVzdnSAA9MiU
D14GGPhDrPy/bxGAyQMuleGGJD/t392EcvhhdJGVVIRIPN63bTLC+aDHeqsu
tzGGe2y2M1PHeCEup9YvkbhU8c5xQU1e0BjdXcBngsGvtlV/7TQPREc7ilJN
McgNn9A1iOABlSchUxK7MbhtOqPXc5sb2pjs67KIncLfTmT5ckPIrmQ3WTMM
yzpC1Wa63PCpL6tVYQ+G+66bvnu2csFJgZeP15ljiJ32HQwU5AJpR5OhR8Rs
IzFlxzEFGvI/yWruw3BMv2LvrgoKiBv0XdS2wNDs+wulO1Hgpe+Sr4El+d7U
/5VnNSccrUrIfUU84SkVujGFE6js1G6wwiD4hf7qkw8neGTKm5lYY5jl+qB3
To4TeJuMVCwOYBiTiJ/5nsEB5SIfDrcSrxATPW98lgOcXKyvW9uSfFeU7Q1w
5ICSWXeKvR0G35w+1xlZDrBVjv3p4oDhspeU9t4SdlgK4JemEe9psDPalc4O
D2quWR9xxMA0k1UZDGUHpk1BnfdBDFVxlF1ze9jhzvl3twOdMPhTj5+V+MsG
Zi0WHdPEVkOKP193s8G0ZMfKM84YHI78qP3dwAYmpb/CQw6T/pWSymu6xQZj
/TxOMa4YHJ/15CrbsMEWw70S6Ucw2D9TdmrJWkYJzqN1op4YRpXXZzWGLaPv
4YnHrhFLKL1e5Xp4GZ1+1fgqzYv0f8SojpvSMipHxp5XvTEkJ1WsNalYQhyu
P1cK+5B+3HPNoytzCVlHnX+aSvyRWfp6MnIJTdbW8qX6YgjsXzS9u28Jae4w
LLtyHENDhHFR9vgiinTvPSToR+K/do451bGIWs6HUq4QDzCy9pXVLSK/+mcO
l09g2OK77H34+iIqMtZduhiAISivOF3AeBGp7NI0Twoi8/Ex5/trhQso+GgL
nfc0hpn6Q34n0hfQuwS/24nEnOmuAbHRC8izqWjqwhkyXxT/bPE6uIDyzFQz
E86S95HlaUMRXEDTPo07uM9hOLQQceodi4V2JHn9jifmV9czbBhlIfwhH8WH
YBj/sOJUWCMLyZkrDMWGkfm+Onj8WwwL+R+vvcIZjmHfzT/4wikWenXRRS+W
WKNq7n2IBws5f7p1MSYCw+44U1kZYxbKspDSPh+FQT1F1N6Rh4XGTjzrZYvG
YCAee5qHwUT6Vxzio4m7S0Lb/40xUdfn611R58nzLWHTGa1MpPZ3c8wycfrG
nTxm9Ux0lvpNPSoGw1FnPvZtVUwkbiUSFRmLQeYG/ZtXDhOxb6hk8sZh6Ats
NOBMY6I/PPbB14jF+wrmhxOYqL725onCeFLvM/dR2Ekm8t+o6Nx+AcM0vh4T
tIeJGgW19FUuYViK/KuwzM5EZWNfKkuJ30dqZOYzGOhWY5CWwWUMLG36ZZcp
BjoV+VTV6gqG1W+21fLTGEhuAomHpmKofBJfO17HQMEtFjMt6RgWVRyfbI5g
IPeHf/0dr5N5p6YrXRzEQPvir479JL4Z3SwjdIyBlLZ/p81lYIjZ9/n2TXsG
+lzs3KZ4k+z3P+3v0jUZ6HniknkxcYmRIu8BZQYq8LzbtCULw2nJCMdZKQYK
lR18bZ5N4vPmGaBRGEjl0vHHZ3LI/lNcec+wex4J+6xcx3ab9Ju6f8hiyzxa
MH5SkEx8fVDr6836edTOms6+c4fEExbf7vZoHkUeD03+kIvBvFNYiS9sHnXu
TfJefR9D17cbA1H882iCZ9+928QpZu9DxRbnEOWd4P/kH2CQddagJkzMIS1I
d1EqxFAR9YjK9WUOJevcsVMtwlAbLzKYnj6HDGWrjDeVkH065x5FlZhDeeNY
3rQagxalrHxm9T/0rCj/cCPx1NW9VEehf6jV+2j27qfkfLIis7mI4x9aoP0W
3/uM1Gf9sVHB4Vlk1/FvpeULDDyBjzxDS2aR37Xn5m3EKTEFvsw7syjGKjzJ
ugaD0rHEHsurs6jkIzuX7UsMZRobEvyDZhFvrcCC42syj1/lP1mjO4vkwlv1
e4jHSipezynPIl39tLNOtaSf3IZME8VmkUeFxMzhOgxnQz7sbJ+mo3OBPVoD
xNPZSWHxNDq6opHj7/aGnN/oCeUjrXRU80BpzKOezMsa29zyR3TU7jmkOkgc
MKQtK3qTjkYUC7283mLofeErI5FAR0v9x/J/EYtJRUfXnKIjsVsaNO8GEl/f
woZFFzpaf3BSbpQ458jdqYnddLRDvML52DsMNC5Z9yRNOvJP1evya8RwK+wF
113mDFJYsTQ8T1wl33B/pG8GtZ9/OxfXhIFbao76uW4GbQnaL5Hznuxz67Yz
sfEzaNHO077lIwbhjyIbVPhn0CWZ1G8arSR/O/6qPeOfRkX3h9smOkl9sod2
2MhPImf5xzi0C0OI69YeL8okEsw8NcndjSGjkS+N8+tfdCppkSrfQ84Tnv1F
Sd5/kb6fqKXlD7JPDdrLNFIn0PtN0PIEYwjWGeB/3/0HDb3M+BA4Ss6D1j7+
Pb9HkCFfkDmT2KT/heqB+yMo3cGyJXaM7IOAk0eOuY0gk2meLxm/Maw5Q69O
/DqMClRDul6OY1BorlYQrf6FPNOchnmnMbTW2aR9CRxEP70VuHKZZD6f5/xR
2DyAtlUtJKxnkXifRhl9MxxAaRzdvJXESV4CpX4l/WhnzlWBpgWyD2w7BynX
+lBeO4fY+BIGu+pKsUqPXuS+fUhJn5MGOptvrJBa04mwSJHRF34amG9v8M6c
/oyO7HgQZy1Ag3HJ0NEcxc/oV0DB+y/EIpltU002LWj8022r9pU08HwpJJlb
04yYCdfcvlJp8MmqepdA4XskxgqP/i5KA5Vlp4tjk/XoxrrQBjsxGmQZ0B4y
TOqRtONZ3g7iEeonu4vZb5Bi1cnUjlU0GK2J7bSwqkOaAUfvdkrQoO6Fy1xo
dg0qyzky6CBJA6uL6tKPPV+gzZ/c1LqIB2WkVAN0niODdU6lXVI0cEx+F8T5
sxqZ/c+yrluGBs1iJ3iEEspRs7AF5ZAsDbba7CnyjCxD+432mvUQl/orK/BF
lCK7HJO2ntU06Cu4NG0p8xh1Ne8Qc5Ijz+9K0siFR8iZiRx7ia3q3edsTz5E
Hg76uFeeBuvOxincW7yHhuK3KDsr0MDh5XZ6rmMB8qnU8flBXLlYCvVv8lCA
sObkD0Ua7FLabeEceQdNg/rmw0o0OP17zYnKB7dQsL/auT7ihiGt/d8nbqLw
ZiW2/jUkP4031s50pqNlhryJizIN9JpaKWWhaShGbXViPzHVkB783DAVcTtI
f3JZS4Ni9xHcbXgJJcVLCA0QrwyLaHYwSkQClWK2rio0yOiJz3gcF4dSfwpn
DhAXZA6sv8V3HokKU3+4qtJgMnHI7+Z8GMoAAQX8n1f0L+X5BCNp/xWebmqk
HgZ/Lh93PYlybnEXYmKj/o6+4RpfpNDM+cdtHYmv+MR4yEd3VMBg06IRa926
P7K62w6pqi0Fua+nQbQHIzAv1QQV2bOe0ojZUi2er2kXQKlrE1um/vP/f/4P
E+P3nQ==
         "]], LineBox[CompressedData["
1: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
horLG3ZtqPEneXp7o/Vd9DbgGdOC/wPAt35K
         "]]}}, InsetBox[
       FrameBox[
        TagBox[GridBox[{
           {
            GraphicsBox[{{{}, {
                {GrayLevel[0], PointSize[0.019444444444444445`], 
                 AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
                   StyleBox["\<\"\[FilledCircle]\"\>",
                    StripOnInput->False,
                    FontSize->10], {0., 0.}], {{{0., 0.}}, {{0., 
                  0.}}}]}, {}}, {}}, {{}, {{}, {}, 
                {GrayLevel[0], PointSize[0.019444444444444445`], Thickness[
                 Large], Dashing[{Small, Small}], 
                 LineBox[{{-1., 0.}, {1., 0.}}]}}, {}}},
             AspectRatio->0.1,
             Axes->{False, False},
             AxesLabel->{None, None},
             AxesOrigin->{0, 0},
             DisplayFunction->Identity,
             Frame->{{False, False}, {False, False}},
             FrameLabel->{{None, None}, {None, None}},
             FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
             GridLines->{None, None},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             Method->{},
             PlotRange->{{-1., 1.}, {-1., 1.}},
             PlotRangeClipping->True,
             PlotRangePadding->{{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}},
             Ticks->{Automatic, Automatic}], "\<\"\[Theta] = 15\[Degree]\"\>"},
           {
            GraphicsBox[{{{}, {
                {GrayLevel[0], PointSize[0.019444444444444445`], 
                 AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
                   StyleBox["\<\"\[FilledCircle]\"\>",
                    StripOnInput->False,
                    FontSize->10], {0., 0.}], {{{0., 0.}}, {{0., 
                  0.}}}]}, {}}, {}}, {{}, {{}, {}, 
                {GrayLevel[0], PointSize[0.019444444444444445`], Thickness[
                 Large], LineBox[{{-1., 0.}, {1., 0.}}]}}, {}}},
             AspectRatio->0.1,
             Axes->{False, False},
             AxesLabel->{None, None},
             AxesOrigin->{0, 0},
             DisplayFunction->Identity,
             Frame->{{False, False}, {False, False}},
             FrameLabel->{{None, None}, {None, None}},
             FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
             GridLines->{None, None},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             Method->{},
             PlotRange->{{-1., 1.}, {-1., 1.}},
             PlotRangeClipping->True,
             PlotRangePadding->{{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}},
             Ticks->{Automatic, Automatic}], "\<\"\[Theta] = 45\[Degree]\"\>"},
           {
            GraphicsBox[{{{}, {
                {GrayLevel[0], PointSize[0.019444444444444445`], 
                 AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
                   StyleBox["\<\"\[FilledCircle]\"\>",
                    StripOnInput->False,
                    FontSize->10], {0., 0.}], {{{0., 0.}}, {{0., 
                  0.}}}]}, {}}, {}}, {{}, {{}, {}, 
                {GrayLevel[0], PointSize[0.019444444444444445`], Thickness[
                 Large], Dashing[{0, Small}], 
                 LineBox[{{-1., 0.}, {1., 0.}}]}}, {}}},
             AspectRatio->0.1,
             Axes->{False, False},
             AxesLabel->{None, None},
             AxesOrigin->{0, 0},
             DisplayFunction->Identity,
             Frame->{{False, False}, {False, False}},
             FrameLabel->{{None, None}, {None, None}},
             FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
             GridLines->{None, None},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             Method->{},
             PlotRange->{{-1., 1.}, {-1., 1.}},
             PlotRangeClipping->True,
             PlotRangePadding->{{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}},
             Ticks->{Automatic, Automatic}], "\<\"\[Theta] = 75\[Degree]\"\>"}
          },
          AutoDelete->False,
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"],
        StripOnInput->False], 
       Scaled[{0.2363313458811856, 0.8224534568701254}], 
       Center, {0.08820694902734019, 0.0017200291862723921`}, {{1., 0.}, {0., 
       1.}}]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0.5, 0},
     BaseStyle->{FontWeight -> "Plain", FontSize -> 16},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{
       FormBox[
       "\"r / \\!\\(\\*SubscriptBox[\\(R\\), \\(\[CircleDot]\\)]\\)\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"Max\\\",\\nFontWeight->\\\"Plain\\\"]\\)\\!\
\\(\\*\\nStyleBox[\\\"[\\\",\\nFontWeight->\\\"Plain\\\"]\\)N(x;r,\[Theta])\\!\
\\(\\*\\nStyleBox[\\\"]\\\",\\nFontWeight->\\\"Plain\\\"]\\)\"", 
        TraditionalForm]},
     FrameStyle->GrayLevel[0],
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->{{66.588235, 16.176471}, {47.176471, 9.411765}},
     ImageSize->{438.8235294117609, Automatic},
     LabelStyle->GrayLevel[0],
     Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
     PlotRange->{{0.5, 0.7}, {0., 0.005}},
     PlotRangeClipping->True,
     PlotRangePadding->Automatic,
     Ticks->{Automatic, Automatic}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Pigkappa\\\\Dropbox\\\\fisica\\\\PhD\\\\\
AngularMomentumTransfer\\\\Minimum Pr\\\\picNumFact.png\>\"", ",", 
     "NumFactPlot", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "150"}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.645522242185254*^9, 3.645522301060958*^9}, {
  3.6476940806024833`*^9, 3.6476940827429047`*^9}, {3.6476942770810137`*^9, 
  3.6476942788013506`*^9}, {3.6581432568402634`*^9, 3.6581432580434012`*^9}, {
  3.658143469647328*^9, 3.6581434826162767`*^9}}]
},
WindowSize->{1898, 960},
WindowMargins->{{-2, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification:>1.7 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 2292, 74, 403, "Input"],
Cell[2852, 96, 467, 11, 50, "Input"],
Cell[3322, 109, 6660, 202, 435, "Input"],
Cell[9985, 313, 951, 26, 243, "Input"],
Cell[10939, 341, 1171, 37, 147, "Input"],
Cell[12113, 380, 1924, 54, 179, "Input"],
Cell[14040, 436, 1820, 52, 179, "Input"],
Cell[15863, 490, 3092, 92, 290, "Input"],
Cell[18958, 584, 3615, 97, 339, "Input"],
Cell[22576, 683, 5780, 171, 468, "Input"],
Cell[28359, 856, 1846, 36, 83, "Input"],
Cell[30208, 894, 2498, 75, 301, "Input"],
Cell[32709, 971, 2679, 67, 323, "Input"],
Cell[35391, 1040, 3408, 99, 675, "Input"],
Cell[38802, 1141, 1059, 33, 275, "Input"],
Cell[CellGroupData[{
Cell[39886, 1178, 4455, 131, 667, "Input"],
Cell[44344, 1311, 333, 4, 49, "Output"],
Cell[44680, 1317, 345, 5, 49, "Output"],
Cell[45028, 1324, 327, 4, 49, "Output"],
Cell[45358, 1330, 347, 5, 49, "Output"],
Cell[45708, 1337, 346, 5, 49, "Output"],
Cell[46057, 1344, 331, 4, 49, "Output"],
Cell[46391, 1350, 343, 5, 49, "Output"],
Cell[46737, 1357, 327, 4, 49, "Output"],
Cell[47067, 1363, 345, 5, 49, "Output"],
Cell[47415, 1370, 343, 5, 49, "Output"]
}, Open  ]],
Cell[47773, 1378, 1434, 42, 119, "Input"],
Cell[CellGroupData[{
Cell[49232, 1424, 3317, 71, 224, "Input"],
Cell[52552, 1497, 10503, 260, 196, "Output"]
}, Open  ]],
Cell[63070, 1760, 318, 7, 50, "Input"],
Cell[63391, 1769, 4029, 102, 243, "Input"],
Cell[67423, 1873, 70597, 1206, 608, InheritFromParent],
Cell[138023, 3081, 701, 19, 83, "Input"],
Cell[138727, 3102, 71676, 1225, 680, "Input"]
}
]
*)

(* End of internal cache information *)
